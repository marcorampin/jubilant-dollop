
########################################################################################
AUTOGENERATED HYPR CONFIG.
PLEASE USE THE CONFIG PROVIDED IN THE GIT REPO /examples/hypr.conf AND EDIT IT,
OR EDIT THIS ONE ACCORDING TO THE WIKI INSTRUCTIONS.
########################################################################################

#
# Please note not all available settings / options are set here.
# For a full list, see the wiki
#

#autogenerated = 1 # remove this line to remove the warning

# See https://wiki.hyprland.org/Configuring/Monitors/
monitor=eDP-1,preferred,auto,1
#monitor=,preferred,auto,1
### Mirroring display
monitor=,preferred,auto,1,mirror,eDP-1


# See https://wiki.hyprland.org/Configuring/Keywords/ for more

# Execute your favorite apps at launch

#exec-once = dbus-update-activation-environment --systemd WAYLAND_DISPLAY XDG_CURRENT_DESKTOP
#exec-once = systemctl --user import-environment WAYLAND_DISPLAY XDG_CURRENT_DESKTOP
#exec-once = systemctl start xdg-desktop-portal-hyprland

exec-once = /usr/lib/polkit-gnome/polkit-gnome-authentication-agent-1
exec-once = wlsunset -l 48.2 -L 16.4 -T 5500
exec-once = swayidle -w timeout 150 'hyprctl dispatch dpms off' resume 'hyprctl dispatch dpms on' before-sleep swaylock
exec-once = dunst --no-startup-id
exec-once = waybar
exec-once = wl-paste --watch cliphist store




# Source a file (multi-file configs)
# source = ~/.config/hypr/myColors.conf

# Some default env vars.
env = XCURSOR_SIZE,24

# For all categories, see https://wiki.hyprland.org/Configuring/Variables/
input {
    kb_layout = it
    kb_variant =
    kb_model =
    kb_options =
    kb_rules =

    follow_mouse = 2

    touchpad {
        natural_scroll = yes
    }

    sensitivity = 0 # -1.0 - 1.0, 0 means no modification.
}

general {
    # See https://wiki.hyprland.org/Configuring/Variables/ for more

    gaps_in = 7
    gaps_out = 14
    border_size = 3
    col.active_border = rgb(4ccf9f)
    col.inactive_border = rgb(595959)
    cursor_inactive_timeout = 30

    layout = dwindle
}

decoration {
    # See https://wiki.hyprland.org/Configuring/Variables/ for more

    rounding = 8
    blur = false
    blur_size = 3
    blur_passes = 1
    blur_new_optimizations = true

    drop_shadow = false
    shadow_range = 4
    shadow_render_power = 3
    col.shadow = rgba(1a1a1aee)
    dim_inactive = true
    dim_strength = 0.25

    exec-once = swaybg -i /usr/share/backgrounds/sway/odin-dark.jpg -m fill
}

animations {
    enabled = true

    # Some default animations, see https://wiki.hyprland.org/Configuring/Animations/ for more

    bezier = myBezier, 0.05, 0.9, 0.1, 1.05

    animation = windows, 1, 7, myBezier
    animation = windowsOut, 1, 7, default, popin 80%
    animation = border, 1, 10, default
    animation = borderangle, 1, 8, default
    animation = fade, 1, 7, default
    animation = workspaces, 1, 6, default
}

misc {
    disable_hyprland_logo = true
    vfr = true
}

dwindle {
    # See https://wiki.hyprland.org/Configuring/Dwindle-Layout/ for more
    pseudotile = yes # master switch for pseudotiling. Enabling is bound to mainMod + P in the keybinds section below
    preserve_split = yes # you probably want this
    no_gaps_when_only = true
}

master {
    # See https://wiki.hyprland.org/Configuring/Master-Layout/ for more
    new_is_master = true
}

# Example per-device config
# See https://wiki.hyprland.org/Configuring/Keywords/#executing for more
device:epic-mouse-v1 {
    sensitivity = -0.5
}

#
### WINDOW RULE
#
# Example windowrule v1
# windowrule = float, ^(kitty)$
# Example windowrule v2
# windowrulev2 = float,class:^(kitty)$,title:^(kitty)$
# See https://wiki.hyprland.org/Configuring/Window-Rules/ for more
    windowrule = float, wofi
    windowrule = float, vimiv
    windowrule = float, pavucontrol
    windowrule = float, nm-connection-editor


# See https://wiki.hyprland.org/Configuring/Keywords/ for more
#
### KEYBINDINGS
#
# Setting variables
    $mainMod = MOD4
#
# Example binds, see https://wiki.hyprland.org/Configuring/Binds/ for more
# 
### LAUNCH/KILL PROGRAMS
    bind = $mainMod, Return, exec, foot
    bind = $mainMod, e, exec, thunar
    bind = $mainMod, d, exec, killall wofi || wofi
    bind = $mainMod SHIFT, x, exec, hyprctl kill
    bind = $mainMod, b, exec, brave
    bind = $mainMod, v, exec, cliphist list | wofi --show dmenu -H 300 -W 500   | cliphist decode | wl-copy
    bind = $mainMod SHIFT, v, exec, rm "$HOME/.cache/cliphist/db"


### WINDOW MANAGEMENT
    bind = $mainMod, q, killactive, 
    bind = $mainMod, f, fullscreen
    bind = $mainMod, space, togglefloating,
    bind = $mainMod, P, pseudo, # dwindle
    bind = $mainMod, s, togglesplit, # dwindle
### LOGGING MANAGEMENT
    bind = $mainMod SHIFT, q, exit,
    bind = $mainMod, F9, exec, swaylock
    bind = $mainMod, escape, exec, killall wlogout || wlogout --protocol layer-shell
### TABBED WINDOWS
    bind = $mainMod, g, togglegroup
    bind = $mainMod, tab, changegroupactive
### SCRATCHPAD
    bind = $mainMod, a, togglespecialworkspace
    bind = $mainMod SHIFT, a, movetoworkspace, special
### NOTIFICATIONS
    bind = $mainMod, n, exec, dunstctl close
    bind = $mainMod SHIFT, n, exec, dunstctl close-all

#
### MOVE FOCUS
#
# Move focus with mainMod + vim style
    bind = $mainMod, h, movefocus, l
    bind = $mainMod, l, movefocus, r
    bind = $mainMod, k, movefocus, u
    bind = $mainMod, j, movefocus, d
# Move focus with mainMod + arrow keys
    bind = $mainMod, left, movefocus, l
    bind = $mainMod, right, movefocus, r
    bind = $mainMod, up, movefocus, u
    bind = $mainMod, down, movefocus, d
#
### MOVE WINDOWS
#
# Move windows with mainMod + vim style
    bind = $mainMod SHIFT, h, movewindow, l
    bind = $mainMod SHIFT, l, movewindow, r
    bind = $mainMod SHIFT, k, movewindow, u
    bind = $mainMod SHIFT, j, movewindow, d
# Move windows with mainMod + arrow keys
    bind = $mainMod SHIFT, left, movewindow, l
    bind = $mainMod SHIFT, right, movewindow, r
    bind = $mainMod SHIFT, up, movewindow, u
    bind = $mainMod SHIFT, down, movewindow, d
# Move floating windows with mainMod + shift + vim style
    binde = $mainMod SHIFT, h, moveactive, -10 0
    binde = $mainMod SHIFT, l, moveactive, 10 0
    binde = $mainMod SHIFT, k, moveactive, 0 -10
    binde = $mainMod SHIFT, j, moveactive, 0 10
# Move floating windows with mainMod + shift + arrow keys
    binde = $mainMod SHIFT, left, moveactive, -10 0
    binde = $mainMod SHIFT, right, moveactive, 10 0
    binde = $mainMod SHIFT, up, moveactive, 0 -10
    binde = $mainMod SHIFT, down, moveactive, 0 10
# Move windows with mainMod + Shift + LMB and dragging
    bindm = $mainMod SHIFT, mouse:272, movewindow

#
### RESIZE WINDOWS
#
# will switch to a submap called resize
    bind=$mainMod, r, submap, resize
# will start a submap called "resize"
    submap=resize
# Resize windows with mainMod + LMB and dragging
    bindm = $mainMod, mouse:272, resizewindow
# sets repeatable binds for resizing the active window (arrow keys)
    binde=, l, resizeactive, 10 0
    binde=, h, resizeactive, -10 0
    binde=, k, resizeactive, 0 -10
    binde=, j, resizeactive, 0 10
# sets repeatable binds for resizing the active window (arrow keys)
    binde=, right, resizeactive, 10 0
    binde=, left, resizeactive, -10 0
    binde=, up, resizeactive, 0 -10
    binde=, down, resizeactive, 0 10
# use reset to go back to the global submap
    bind=, escape, submap, reset 
# will reset the submap, meaning end the current one and return to the global one
    submap=reset
# keybinds return global again

#
### WORKSPACES
#
# Switch workspaces with mainMod + [0-9]
    bind = $mainMod, 1, workspace, 1
    bind = $mainMod, 2, workspace, 2
    bind = $mainMod, 3, workspace, 3
    bind = $mainMod, 4, workspace, 4
    bind = $mainMod, 5, workspace, 5
    bind = $mainMod, 6, workspace, 6
    bind = $mainMod, 7, workspace, 7
    bind = $mainMod, 8, workspace, 8
    bind = $mainMod, 9, workspace, 9
    bind = $mainMod, 0, workspace, 10
# Move active window to a workspace with mainMod + SHIFT + [0-9]
    bind = $mainMod SHIFT, 1, movetoworkspace, 1
    bind = $mainMod SHIFT, 2, movetoworkspace, 2
    bind = $mainMod SHIFT, 3, movetoworkspace, 3
    bind = $mainMod SHIFT, 4, movetoworkspace, 4
    bind = $mainMod SHIFT, 5, movetoworkspace, 5
    bind = $mainMod SHIFT, 6, movetoworkspace, 6
    bind = $mainMod SHIFT, 7, movetoworkspace, 7
    bind = $mainMod SHIFT, 8, movetoworkspace, 8
    bind = $mainMod SHIFT, 9, movetoworkspace, 9
    bind = $mainMod SHIFT, 0, movetoworkspace, 10


#
### SPECIAL KEYBINDINGS (AUDIO/BACKLIGHT)
#
### Volume
    binde =, XF86AudioRaiseVolume, exec, ~/.config/dunst/scripts/volume_brightness.sh volume_up --no-startup-id
    binde =, XF86AudioLowerVolume, exec, ~/.config/dunst/scripts/volume_brightness.sh volume_down --no-startup-id
    binde =, XF86AudioMute, exec, ~/.config/dunst/scripts/volume_brightness.sh volume_mute --no-startup-id
### Brightness
    binde =, XF86MonBrightnessUp, exec, ~/.config/dunst/scripts/volume_brightness.sh brightness_up --no-startup-id
    bind =, XF86MonBrightnessDown, exec, ~/.config/dunst/scripts/volume_brightness.sh brightness_down --no-startup-id
### Toggle touchpad
    bind =, XF86TouchpadToggle, exec, input type:touchpad events toggle enabled disabled#, \ ~/.config/dunst/scripts/touchpad_status.sh notif

#
### SCREENSHOTS AND SCREENRECORDING
#
    bind =, Print, exec, grim -g "$(slurp)" ~/Pictures/grim-screenshot/slurped_screenshot-$(date +"%Y-%m-%d_%H-%M-%S").png
    bind = $mainMod, Print, exec, grim ~/Pictures/grim-screenshot/fullscreen_screenshot-$(date +"%Y-%m-%d_%H-%M-%S").png

    bind = $mainMod, Insert, exec, wf-recorder -g "$(slurp)" -f ~/Videos/wf-recorder/slurped_audio_recording-$(date +"%Y-%m-%d_%H-%M-%S").mp4 -aalsa_output.pci-0000_00_0e.0.analog-stereo.monitor
    bind =, Insert, exec, killall -s SIGINT wf-recorder
